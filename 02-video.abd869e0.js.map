{"mappings":"AAAA,IAAMA,OAASC,SAASC,cAAc,uBAChCC,OAAS,IAAIC,MAAMC,OAAOL,QAE1BM,eAAiB,SAAAC,GAAWA,EAARC,SAAiBD,EAAPE,Q,IAASC,EAAOH,EAAPG,QAC3CC,QAAQC,IAAIF,GACZG,aAAaC,QAAQ,2BAA4BJ,E,EAGnDP,OAAOY,GAAG,aAAcC,EAAEC,SAASX,eAAgB,MAEnD,IAAMY,uBAAyB,WAE7B,IACE,IAAMC,EAAmBN,aAAaO,QAAQ,4BAC9C,IAAKD,EAAkB,OAHL,EAKlB,IAAME,EAAaC,KAAKC,MAAMJ,GAC9B,OAAOK,OAAOH,E,CACd,MAAOI,GAEP,OADAd,QAAQC,IAAI,CAAEa,UARI,C,GAahBC,yBAA2B,WAC/B,IAAMC,EAAiBT,yBACvBf,OAAOyB,eAAeD,E,EAGxBD","sources":["src/js/02-video.js"],"sourcesContent":["const iframe = document.querySelector('iframe#vimeo-player');\nconst player = new Vimeo.Player(iframe);\n\nconst savePlayerTime = ({ duration, percent, seconds }) => {\n  console.log(seconds);\n  localStorage.setItem('videoplayer-current-time', seconds);\n};\n\nplayer.on('timeupdate', _.throttle(savePlayerTime, 1000));\n\nconst getLocalLastPlayedTime = () => {\n  const defaultTime = 0;\n  try {\n    const locallySavedTime = localStorage.getItem('videoplayer-current-time');\n    if (!locallySavedTime) return defaultTime;\n\n    const parsedTime = JSON.parse(locallySavedTime);\n    return Number(parsedTime);\n  } catch (error) {\n    console.log({ error });\n    return defaultTime;\n  }\n};\n\nconst resumePlayerOnLastPlayed = () => {\n  const lastPlayedTime = getLocalLastPlayedTime();\n  player.setCurrentTime(lastPlayedTime);\n};\n\nresumePlayerOnLastPlayed();\n"],"names":["iframe","document","querySelector","player","Vimeo","Player","savePlayerTime","param","duration","percent","seconds","console","log","localStorage","setItem","on","_","throttle","getLocalLastPlayedTime","locallySavedTime","getItem","parsedTime","JSON","parse","Number","error","resumePlayerOnLastPlayed","lastPlayedTime","setCurrentTime"],"version":3,"file":"02-video.abd869e0.js.map"}